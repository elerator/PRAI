image: registry.roqs.basf.net/docker:stable

variables:
  DEPLOYMENT_NAME: prai-information-desk
  IMAGE_NAME: prai_information_desk
  CI_REGISTRY: registry.roqs.basf.net
  HTTP_PROXY: http://10.4.55.31:8080/
  HTTPS_PROXY: ${HTTP_PROXY}
  IMAGE: ${CI_REGISTRY}/${CI_REGISTRY_NAMESPACE}/${IMAGE_NAME}:${CI_PIPELINE_ID}
  IMAGE_LATEST: ${CI_REGISTRY}/${CI_REGISTRY_NAMESPACE}/${IMAGE_NAME}:latest
  PARENT_TEMPLATE: https://gitlab.roqs.basf.net/hp-project-templates/flask-restplus/

stages:
  - build
  - test
  - deploy
  - undeploy

build:
  only:
    - /^release-.*$/
    - master
    - development
  stage: build
  tags:
    - docker
  before_script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_TOKEN} ${CI_REGISTRY}
  script:
    - docker build -t $IMAGE --build-arg=http_proxy="${HTTP_PROXY}" --build-arg=https_proxy="${HTTP_PROXY}" .
    - docker push $IMAGE
    - docker tag $IMAGE $IMAGE_LATEST
    - docker push $IMAGE_LATEST

sonarqube_code_quality_inspection:
  stage: test
  only:
    - master
    - /^release-.*$/
  image: ${CI_REGISTRY}/sonar-scanner
  variables:
    SONAR_EXTRA_OPTS: "-X -Dsonar.sources=. -Dsonar.host.url=http://10.99.195.7:9000/sonarqube -Dsonar.login=2e9e893fde0d75005fc94ee7fe37d78b78a06485"
  script:
    - sonar-scanner ${SONAR_EXTRA_OPTS} -Dsonar.projectKey=${CI_PROJECT_PATH_SLUG} -Dsonar.projectVersion=${CI_COMMIT_REF_NAME}-${CI_COMMIT_TAG}-${CI_COMMIT_SHA:0:8}
  after_script:
    - echo "Browse your project on https://app.roqs.basf.net/sonarqube/dashboard?id=${CI_PROJECT_PATH_SLUG}"

clair_container_scanning:
  stage: test
  only:
    - master
    - /^release-.*$/
  image: ${CI_REGISTRY}/docker:stable
  allow_failure: true
  services:
    - name: ${CI_REGISTRY}/docker:stable-dind
      alias: docker
  script:
    - basf-clair-scan.sh ${IMAGE}
  artifacts:
    paths: [gl-container-scanning-report.json]

deploy:
  only:
    - /^release-.*$/
    - master
    - development
  stage: deploy
  image: ${CI_REGISTRY}/kubectl/kubectldev:v2
  tags:
    - docker
  script:
    - kubectl apply -f deployment.yml
    - kubectl set image deployments/${DEPLOYMENT_NAME} ${DEPLOYMENT_NAME}=${IMAGE}

undeploy:
  only:
    - /^release-.*$/
    - master
    - development
  stage: undeploy
  image: ${CI_REGISTRY}/kubectl/kubectldev:v2
  when: manual
  tags:
    - docker
  script:
    - kubectl delete service ${DEPLOYMENT_NAME}
    - kubectl delete deployment ${DEPLOYMENT_NAME}
